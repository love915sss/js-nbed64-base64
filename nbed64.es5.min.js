/**
 * BSD开源协议 && BSD open source agreement
 * Gitee: https://gitee.com/love915sss/js-nbed64-base64
 * GitHub： https://github.com/love915sss/js-nbed64-base64/
 * Author Blog: https://blog.csdn.net/qq_16661383?type=blog
 * 压缩版 && 兼容ES5引用模式
 */


nbed64BinaryEncrypt=function(O,key,ab=true){const bC=az(ab);const by=bE(key);const bk=by.length;const bl=O.length;const R=bl%3;const aj=bl%3===0?parseInt(bl/3):parseInt(bl/3)+1;const L=aj*4;let l=new Uint8Array(3);let V=new Uint8Array(L);let i=0,K=0,C=0;for(let j=0;L>i;j++){K=j%bk;l[0]=O[C+0]^by[K];l[1]=O[C+1]^by[K];l[2]=O[C+2]^by[K];V[i+0]=bC[l[0]>>2];V[i+1]=bC[((l[0]&0x03)<<4)+(l[1]>>4)];V[i+2]=bC[((l[1]&0x0F)<<2)+(l[2]>>6)];V[i+3]=bC[l[2]&0x3F];i=i+4;C=C+3;}let ad=0;if(!ab){if(R===1){V[L-2]=0x3D;V[L-1]=0x3D;}else if(R===2){V[L-1]=0x3D;}}else{if(R===1){ad=2;}else if(R===2){ad=1;}else{ad=0;}}let an="";for(let i=0;i<L-ad;i++){an+=String.fromCharCode(V[i]);}return an;};nbed64BinaryDecrypt=function(G,key){const bl=G.length;const bk=key.length;const aj=bl%4;const R=aj===0?0:4-aj;const loop=R===0?parseInt(bl/4):parseInt(bl/4)+1;const aT=loop*3;let fill='';for(let i=0;i<R;i++){fill+='=';}G+=fill;const by=bE(key);const aC=as(G);let F=new Uint8Array(aT);let h=0,i=0,j= -1,K=0;for(let w=0;w<loop;w++){j++;K=j%bk;let l=new Uint8Array(4);for(let y=0;y<4;y++){let n=0;let p=w*4+y;let b=aC[p];if(b>=65&&b<=90){n=b-65;}else if(b>=97&&b<=122){const bu=26;n=b-97+bu;}else if(b>=48&&b<=57){const bu=52;n=b-48+bu;}else if(b===43||b===45){n=62;}else if(b===47||b===95){n=63;}else{h++;}l[y]=n;}let bP=l[0]<<2|l[1]>>4;let aZ=(l[1]&15)<<4|l[2]>>2;let bp=(l[2]&3)<<6|l[3];F[i+0]=bP^by[K];F[i+1]=aZ^by[K];F[i+2]=bp^by[K];i+=3;}let aP=F.length-h;let H=new Uint8Array(aP);for(let n=0;n<aP;n++){H[n]=F[n];}return H;};nbed64BinaryEncryptEx=function(O,key,ah=32){const aL=aU(ah);const ak=aQ(aL.length);const bC=az(true);const by=bE(key);const bk=by.length;const bl=O.length;const bh=aL.length;const R=bl%3;const aj=bl%3===0?parseInt(bl/3):parseInt(bl/3)+1;const L=aj*4;let l=new Uint8Array(3);let V=new Uint8Array(L);let i=0,K=0,m=0,C=0,au=0;for(let j=0;L>i;j++){K=j%bk;m=j%bh;au=by[K]+aL[m]|by[K]|aL[m];l[0]=O[C+0]^au;l[1]=O[C+1]^au;l[2]=O[C+2]^au;V[i+0]=bC[l[0]>>2];V[i+1]=bC[((l[0]&0x03)<<4)+(l[1]>>4)];V[i+2]=bC[((l[1]&0x0F)<<2)+(l[2]>>6)];V[i+3]=bC[l[2]&0x3F];i=i+4;C=C+3;}let ad=R===1?2:R===2?1:0;let an="";for(let i=0;i<L-ad;i++){an+=String.fromCharCode(V[i]);}let bs=new Uint8Array(aL.length+2);for(let n=0;n<aL.length;n++){bs[2+n]=aL[n];}bs[1]=ak[1];bs[0]=ak[0];let av=nbed64BinaryEncrypt(bs,key,true);return av+an;};nbed64BinaryDecryptEx=function(G,key){const bs=nbed64BinaryDecrypt(G.slice(0,4),key);const bq=ae(bs);const aI=bq%3;const bH=aI===0?bq/3*4:bq/3*4+(3-aI);const ay=nbed64BinaryDecrypt(G.slice(0,bH+4),key);let aL=new Uint8Array(bq);for(let i=0;i<bq;i++){aL[i]=ay[i+2]}let shift=aI===1?1:3;let bv=bH+shift;let aE=G.slice(bv,G.length);const bl=aE.length;const bk=key.length;const bh=aL.length;const aj=bl%4;const R=aj===0?0:4-aj;const loop=R===0?parseInt(bl/4):parseInt(bl/4)+1;const aT=loop*3;let fill='';for(let i=0;i<R;i++){fill+='=';}aE+=fill;const by=bE(key);const aC=as(aE);let F=new Uint8Array(aT);let h=0,i=0,K=0,j= -1,m= -1,au=0;for(let w=0;w<loop;w++){j++;K=j%bk;m=j%bh;au=by[K]+aL[m]|by[K]|aL[m];let l=new Uint8Array(4);for(let y=0;y<4;y++){let n=0;let p=w*4+y;let b=aC[p];if(b>=65&&b<=90){n=b-65;}else if(b>=97&&b<=122){const bu=26;n=b-97+bu;}else if(b>=48&&b<=57){const bu=52;n=b-48+bu;}else if(b===43||b===45){n=62;}else if(b===47||b===95){n=63;}else{h++;}l[y]=n;}let bP=l[0]<<2|l[1]>>4;let aZ=(l[1]&15)<<4|l[2]>>2;let bp=(l[2]&3)<<6|l[3];F[i+0]=bP^au;F[i+1]=aZ^au;F[i+2]=bp^au;i+=3;}let aP=F.length-h;let H=new Uint8Array(aP);for(let n=0;n<aP;n++){H[n]=F[n];}return H;};nbed64StringEncrypt=function(J,key,aJ=true,ab=true){const O=aJ?aD(J,4):bJ(J,4);return nbed64BinaryEncrypt(O,key,ab);};nbed64StringDecrypt=function(G,key,aJ=true){let H=nbed64BinaryDecrypt(G,key);let aE=aJ?aM(H):bN(H);return aE;};nbed64StringEncryptEx=function(J,key,aJ=true,ah=32){const O=aJ?aD(J,4):bJ(J,4);return nbed64BinaryEncryptEx(O,key,ah);};nbed64StringDecryptEx=function(G,key,aJ=true){let H=nbed64BinaryDecryptEx(G,key);let aE=aJ?aM(H):bN(H);return aE;};nbed64BinaryEncode=function(O,ab=true){const bC=az(ab);const bl=O.length;const R=bl%3;const aj=bl%3===0?parseInt(bl/3):parseInt(bl/3)+1;const L=aj*4;let V=new Uint8Array(L);let i=0,C=0;for(let j=0;L>i;i=i+4){V[i+0]=bC[O[C+0]>>2];V[i+1]=bC[((O[C+0]&0x03)<<4)+(O[C+1]>>4)];V[i+2]=bC[((O[C+1]&0x0F)<<2)+(O[C+2]>>6)];V[i+3]=bC[O[C+2]&0x3F];C=C+3;}let ad=0;if(!ab){if(R===1){V[L-2]=0x3D;V[L-1]=0x3D;}else if(R===2){V[L-1]=0x3D;}}else{if(R===1){ad=2;}else if(R===2){ad=1;}else{ad=0;}}let an="";for(let i=0;i<L-ad;i++){an+=String.fromCharCode(V[i]);}return an;};nbed64BinaryDecode=function(G){const bl=G.length;const aj=bl%4;const R=aj===0?0:4-aj;const loop=R===0?parseInt(bl/4):parseInt(bl/4)+1;const aT=loop*3;let fill='';for(let i=0;i<R;i++){fill+='=';}G+=fill;const aC=as(G);let F=new Uint8Array(aT);let h=0,i=0;for(let w=0;w<loop;w++){let l=new Uint8Array(4);for(let y=0;y<4;y++){let n=0;let p=w*4+y;let b=aC[p];if(b>=65&&b<=90){n=b-65;}else if(b>=97&&b<=122){const bu=26;n=b-97+bu;}else if(b>=48&&b<=57){const bu=52;n=b-48+bu;}else if(b===43||b===45){n=62;}else if(b===47||b===95){n=63;}else{h++;}l[y]=n;}F[i+0]=l[0]<<2|l[1]>>4;F[i+1]=(l[1]&15)<<4|l[2]>>2;F[i+2]=(l[2]&3)<<6|l[3];i+=3;}let aP=F.length-h;let H=new Uint8Array(aP);for(let n=0;n<aP;n++){H[n]=F[n];}return H;};nbed64StringEncode=function(J,aJ=true,ab=true){const O=aJ?aD(J,4):bJ(J,4);return nbed64BinaryEncode(O,ab);};nbed64StringDecode=function(G,aJ=true){let H=nbed64BinaryDecode(G);let aE=aJ?aM(H):bN(H);return aE;};aD=function(J,empty=0){let K=0;let aR=J.length;let O=new Uint8Array(aR*4+empty);for(let i=0;i<aR;i++){let T=J.charCodeAt(i);if(T>0xFFFF){O[K+0]=(0xF0|(0x07&(T>>18)));O[K+1]=(0x80|(0x3F&(T>>12)));O[K+2]=(0x80|(0x3F&(T>>6)));O[K+3]=(0x80|(0x3F&T));K=K+4;}else if(T>0x7FF){O[K+0]=(0xE0|(0x0F&(T>>12)));O[K+1]=(0x80|(0x3F&(T>>6)));O[K+2]=(0x80|(0x3F&T));K=K+3;}else if(T>0x7F){O[K+0]=(0xC0|(0x1F&(T>>6)));O[K+1]=(0x80|(0x3F&T));K=K+2;}else{O[K]=T;K++;}}let R=K%3;let add=R===0?0:3-R;let aP=K+add;let H=new Uint8Array(aP);for(let i=0;i<aP;i++){H[i]=O[i];}return H;};aM=function(O){let i=0,a=0,b=0,c=0,d=0,t=0,T=0;let bo='';let aR=O.length;while(aR>i){t=O[i];if(t>>3===0x1E){a=O[i+0]%0xF0;b=O[i+1]%0x80;c=O[i+2]%0x80;d=O[i+3]%0x80;T=(a<<18)+(b<<12)+(c<<6)+d;i+=4;}else if(t>>4===0x0E){a=O[i+0]%0xE0;b=O[i+1]%0x80;c=O[i+2]%0x80;T=(a<<12)+(b<<6)+c;i+=3;}else if(t>>5===0x06){a=O[i+0]%0xC0;b=O[i+1]%0x80;T=(a<<6)+b;i+=2;}else{T=O[i+0];i++;}bo+=String.fromCharCode(T);}return bo;};bJ=function(J,empty=0){let i=0;let K=0;let aR=J.length;let ar=J.length*2+empty;let O=new Uint8Array(ar);for(let i=0;i<aR;i++){K=i*2;let aH=J.charCodeAt(i);O[K+0]=aH&0xFF;;O[K+1]=(aH-O[K])/0x100;}return O;};bN=function(O){let i=0;let T=0;let bo='';let aR=O.length;while(aR>i){T=O[i]+(O[i+1]<<8);bo+=String.fromCharCode(T);i+=2;}return bo;};as=function(G){const af=G.length;let O=new Uint8Array(af);for(let i=0;i<af;i++){O[i]=G.charCodeAt(i);}return O;};bE=function(key){let O=new Uint8Array(key.length);for(let i=0;i<O.length;i++){O[i]=key.charCodeAt(i);}return O;};aU=function(ah){ah=ah<32?32:ah;ah=ah>65535?65535:ah;let O=new Uint8Array(ah);for(let i=0;i<O.length;i++){O[i]=parseInt(Math.random()*256);}return O;};aQ=function(aw){let O=new Uint8Array(2);O[0]=aw&0xFF;;O[1]=(aw-O[0])/0x100;return O;};ae=function(O){let bq=(O[1]<<8)+O[0];return bq;};az=function(bF=false){let map='';if(bF){map='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';}else{map='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';}let O=new Uint8Array(map.length);for(let i=0;i<O.length;i++){O[i]=map.charCodeAt(i);}return O;} 